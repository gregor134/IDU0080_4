
/**
 * Please modify this class to meet your needs
 * This class is not complete
 */

package ttu.idu0080.order.server;

import java.math.BigDecimal;
import java.util.ArrayList;
import java.util.List;
import java.util.logging.Logger;
import javax.jws.WebMethod;
import javax.jws.WebParam;
import javax.jws.WebResult;
import javax.jws.WebService;
import javax.persistence.EntityManager;
import javax.persistence.EntityManagerFactory;
import javax.persistence.Persistence;
import javax.xml.bind.annotation.XmlSeeAlso;
import javax.xml.ws.Action;
import javax.xml.ws.RequestWrapper;
import javax.xml.ws.ResponseWrapper;

import ttu.idu0080.order.server.model.EshopOrder;

/**
 * This class was generated by Apache CXF 3.1.11
 * 2017-05-01T17:55:32.507+03:00
 * Generated source version: 3.1.11
 * 
 */

@javax.jws.WebService(
                      serviceName = "OrderServiceService",
                      portName = "OrderServicePort",
                      targetNamespace = "http://server.order.idu0080.ttu/",
                      wsdlLocation = "file:/C:/Projektid/IDU0080_4/BPServer/WebContent/orders.wsdl",
                      endpointInterface = "ttu.idu0080.order.server.OrderService")
                      
public class OrderServiceImpl implements OrderService {

    private static final Logger LOG = Logger.getLogger(OrderServiceImpl.class.getName());

    /* (non-Javadoc)
     * @see ttu.idu0080.order.server.OrderService#getOrdersByCustomerId(int customerId)*
     */
    public java.util.List<ttu.idu0080.order.server.Order> getOrdersByCustomerId(int customerId) { 
        LOG.info("Executing operation getOrdersByCustomerId");
        System.out.println(customerId);
        try {
            java.util.List<ttu.idu0080.order.server.Order> _return = new java.util.ArrayList<ttu.idu0080.order.server.Order>();
            ttu.idu0080.order.server.Order _returnVal1 = new ttu.idu0080.order.server.Order();
            ttu.idu0080.order.server.Customer _returnVal1Customer = new ttu.idu0080.order.server.Customer();
            java.util.List<ttu.idu0080.order.server.Address> _returnVal1CustomerAddresses = new java.util.ArrayList<ttu.idu0080.order.server.Address>();
            _returnVal1Customer.getAddresses().addAll(_returnVal1CustomerAddresses);
            _returnVal1Customer.setCustomer(-1580571219);
            _returnVal1Customer.setFirstName("FirstName480736554");
            _returnVal1Customer.setLastName("LastName1109264901");
            _returnVal1.setCustomer(_returnVal1Customer);
            _returnVal1.setOrderId(-838549545);
            java.util.List<ttu.idu0080.order.server.OrderProduct> _returnVal1OrderProducts = new java.util.ArrayList<ttu.idu0080.order.server.OrderProduct>();
            ttu.idu0080.order.server.OrderProduct _returnVal1OrderProductsVal1 = new ttu.idu0080.order.server.OrderProduct();
            _returnVal1OrderProductsVal1.setOrderProduct(-1563296708);
            _returnVal1OrderProductsVal1.setPrice(0.7430559f);
            _returnVal1OrderProductsVal1.setPriceTotal(0.15824723f);
            _returnVal1OrderProductsVal1.setProductCount(-46791489);
            _returnVal1OrderProductsVal1.setProductName("ProductName-1411954467");
            _returnVal1OrderProducts.add(_returnVal1OrderProductsVal1);
            _returnVal1.getOrderProducts().addAll(_returnVal1OrderProducts);
            _returnVal1.setPriceTotal(0.8700991f);
            ttu.idu0080.order.server.Seller _returnVal1Seller = new ttu.idu0080.order.server.Seller();
            java.util.List<ttu.idu0080.order.server.EntAddress> _returnVal1SellerAddresses = new java.util.ArrayList<ttu.idu0080.order.server.EntAddress>();
            _returnVal1Seller.getAddresses().addAll(_returnVal1SellerAddresses);
            _returnVal1Seller.setEnterprise(-242568795);
            _returnVal1Seller.setName("Name1950230174");
            _returnVal1.setSeller(_returnVal1Seller);
            ttu.idu0080.order.server.Address _returnVal1ShippingAddress = new ttu.idu0080.order.server.Address();
            _returnVal1ShippingAddress.setAddress(-608727050);
            _returnVal1ShippingAddress.setCountry("Country-985632566");
            _returnVal1ShippingAddress.setCounty("County880021222");
            _returnVal1ShippingAddress.setStreetAddress("StreetAddress1156730382");
            _returnVal1ShippingAddress.setTownVillage("TownVillage591635950");
            _returnVal1ShippingAddress.setZipcode("Zipcode-1394541672");
            _returnVal1.setShippingAddress(_returnVal1ShippingAddress);
            _return.add(_returnVal1);
            return _return;
        } catch (java.lang.Exception ex) {
            ex.printStackTrace();
            throw new RuntimeException(ex);
        }
    }

    /* (non-Javadoc)
     * @see ttu.idu0080.order.server.OrderService#getAllOrders()*
     */
    public java.util.List<ttu.idu0080.order.server.Order> getAllOrders() { 
        LOG.info("Executing operation getAllOrders");
        try {
        	EntityManagerFactory factory = Persistence.createEntityManagerFactory("BPServer");
        	EntityManager em = factory.createEntityManager();
        	
        	List<Order> orders = new ArrayList<Order>();
        	
        	List<EshopOrder> eshopOrders = em.createNamedQuery("EshopOrder.findAll").getResultList();
        	for (EshopOrder eo : eshopOrders) {
        		Order order = new Order();
        		
        		ttu.idu0080.order.server.Customer customer = new Customer();
            	customer.setCustomer((int) eo.getCustomerFk().getCustomer());
            	customer.setFirstName(eo.getCustomerFk().getFirstName());
            	customer.setLastName(eo.getCustomerFk().getLastName());
            	order.setCustomer(customer);
            	
            	order.setOrderId((int) eo.getEshopOrder());
            	order.setPriceTotal(eo.getPriceTotal().floatValue());
            	            
                ttu.idu0080.order.server.Seller seller = new Seller();
                seller.setEnterprise((int) eo.getSeller().getEnterprise());
                seller.setName(eo.getSeller().getFullName());
                List<ttu.idu0080.order.server.model.EntAddress> addresses = em.createQuery("SELECT e FROM EntAddress e WHERE e.subjectFk = :enterprise")
            	        .setParameter("enterprise", BigDecimal.valueOf(eo.getSeller().getEnterprise()))
            	        .getResultList();
                for (ttu.idu0080.order.server.model.EntAddress a : addresses) { seller.getAddresses().add(addressBuilder(a)); }
            	
            	order.setSeller(seller);
            	
            	ttu.idu0080.order.server.Address address = new Address();
            	address.setAddress((int) eo.getShippingAddressFk().getAddress());
            	address.setCountry(eo.getShippingAddressFk().getCountry());
            	address.setCounty(eo.getShippingAddressFk().getCounty());
            	address.setStreetAddress(eo.getShippingAddressFk().getStreetAddress());
            	address.setTownVillage(eo.getShippingAddressFk().getTownVillage());
            	address.setZipcode(eo.getShippingAddressFk().getZipcode());
            	order.setShippingAddress(address);
            	
            	orders.add(order);
        	}
        	
        	em.close();
			factory.close();
        	
            return orders;
        } catch (java.lang.Exception ex) {
            ex.printStackTrace();
            throw new RuntimeException(ex);
        }
    }
    
    public ttu.idu0080.order.server.EntAddress addressBuilder(ttu.idu0080.order.server.model.EntAddress entAddress) {
        ttu.idu0080.order.server.EntAddress ea = new EntAddress();
        ea.setAddress((int) entAddress.getEntAddress());
        ea.setCountry(entAddress.getCountry());
        ea.setCounty(entAddress.getCounty());
        ea.setStreetAddress(entAddress.getStreetAddress());
        ea.setTownVillage(entAddress.getTownVillage());
        ea.setZipcode(entAddress.getZipcode());
        return ea;
    }

    /* (non-Javadoc)
     * @see ttu.idu0080.order.server.OrderService#getOrdersByOrderId(int orderId)*
     */
    public ttu.idu0080.order.server.Order getOrdersByOrderId(int orderId) { 
        LOG.info("Executing operation getOrdersByOrderId");
        System.out.println(orderId);
        try {
        	EntityManagerFactory factory = Persistence.createEntityManagerFactory("BPServer");
        	EntityManager em = factory.createEntityManager();
        	
        	EshopOrder eshopOrder = em.find(EshopOrder.class, (long) orderId);
        	Order order = new Order();
        	
        	ttu.idu0080.order.server.Customer customer = new Customer();
        	customer.setCustomer((int) eshopOrder.getCustomerFk().getCustomer());
        	customer.setFirstName(eshopOrder.getCustomerFk().getFirstName());
        	customer.setLastName(eshopOrder.getCustomerFk().getLastName());
        	order.setCustomer(customer);
        	
        	order.setOrderId((int) eshopOrder.getEshopOrder());
        	order.setPriceTotal(eshopOrder.getPriceTotal().floatValue());
        	            
            ttu.idu0080.order.server.Seller seller = new Seller();
            seller.setEnterprise((int) eshopOrder.getSeller().getEnterprise());
            seller.setName(eshopOrder.getSeller().getFullName());
            List<ttu.idu0080.order.server.model.EntAddress> addresses = em.createQuery("SELECT e FROM EntAddress e WHERE e.subjectFk = :enterprise")
        	        .setParameter("enterprise", BigDecimal.valueOf(eshopOrder.getSeller().getEnterprise()))
        	        .getResultList();
            for (ttu.idu0080.order.server.model.EntAddress a : addresses) { seller.getAddresses().add(addressBuilder(a)); }
        	
        	order.setSeller(seller);
        	
        	ttu.idu0080.order.server.Address address = new Address();
        	address.setAddress((int) eshopOrder.getShippingAddressFk().getAddress());
        	address.setCountry(eshopOrder.getShippingAddressFk().getCountry());
        	address.setCounty(eshopOrder.getShippingAddressFk().getCounty());
        	address.setStreetAddress(eshopOrder.getShippingAddressFk().getStreetAddress());
        	address.setTownVillage(eshopOrder.getShippingAddressFk().getTownVillage());
        	address.setZipcode(eshopOrder.getShippingAddressFk().getZipcode());
        	order.setShippingAddress(address);

        	em.close();
			factory.close();
        	
            return order;
        } catch (java.lang.Exception ex) {
            ex.printStackTrace();
            throw new RuntimeException(ex);
        }
    }

    /* (non-Javadoc)
     * @see ttu.idu0080.order.server.OrderService#getOrdersByShippingAddress(java.lang.String country, java.lang.String county)*
     */
    public java.util.List<ttu.idu0080.order.server.Order> getOrdersByShippingAddress(java.lang.String country, java.lang.String county) { 
        LOG.info("Executing operation getOrdersByShippingAddress");
        System.out.println(country);
        System.out.println(county);
        try {
            java.util.List<ttu.idu0080.order.server.Order> _return = new java.util.ArrayList<ttu.idu0080.order.server.Order>();
            ttu.idu0080.order.server.Order _returnVal1 = new ttu.idu0080.order.server.Order();
            ttu.idu0080.order.server.Customer _returnVal1Customer = new ttu.idu0080.order.server.Customer();
            java.util.List<ttu.idu0080.order.server.Address> _returnVal1CustomerAddresses = new java.util.ArrayList<ttu.idu0080.order.server.Address>();
            _returnVal1Customer.getAddresses().addAll(_returnVal1CustomerAddresses);
            _returnVal1Customer.setCustomer(-22666158);
            _returnVal1Customer.setFirstName("FirstName-1074025920");
            _returnVal1Customer.setLastName("LastName469688442");
            _returnVal1.setCustomer(_returnVal1Customer);
            _returnVal1.setOrderId(-795319082);
            java.util.List<ttu.idu0080.order.server.OrderProduct> _returnVal1OrderProducts = new java.util.ArrayList<ttu.idu0080.order.server.OrderProduct>();
            ttu.idu0080.order.server.OrderProduct _returnVal1OrderProductsVal1 = new ttu.idu0080.order.server.OrderProduct();
            _returnVal1OrderProductsVal1.setOrderProduct(-237254629);
            _returnVal1OrderProductsVal1.setPrice(0.930937f);
            _returnVal1OrderProductsVal1.setPriceTotal(0.7874835f);
            _returnVal1OrderProductsVal1.setProductCount(464382995);
            _returnVal1OrderProductsVal1.setProductName("ProductName1135021036");
            _returnVal1OrderProducts.add(_returnVal1OrderProductsVal1);
            _returnVal1.getOrderProducts().addAll(_returnVal1OrderProducts);
            _returnVal1.setPriceTotal(0.7715316f);
            ttu.idu0080.order.server.Seller _returnVal1Seller = new ttu.idu0080.order.server.Seller();
            java.util.List<ttu.idu0080.order.server.EntAddress> _returnVal1SellerAddresses = new java.util.ArrayList<ttu.idu0080.order.server.EntAddress>();
            _returnVal1Seller.getAddresses().addAll(_returnVal1SellerAddresses);
            _returnVal1Seller.setEnterprise(394097528);
            _returnVal1Seller.setName("Name-1026149134");
            _returnVal1.setSeller(_returnVal1Seller);
            ttu.idu0080.order.server.Address _returnVal1ShippingAddress = new ttu.idu0080.order.server.Address();
            _returnVal1ShippingAddress.setAddress(-1555479846);
            _returnVal1ShippingAddress.setCountry("Country623921504");
            _returnVal1ShippingAddress.setCounty("County1411716648");
            _returnVal1ShippingAddress.setStreetAddress("StreetAddress1271527249");
            _returnVal1ShippingAddress.setTownVillage("TownVillage-723375822");
            _returnVal1ShippingAddress.setZipcode("Zipcode-340327778");
            _returnVal1.setShippingAddress(_returnVal1ShippingAddress);
            _return.add(_returnVal1);
            return _return;
        } catch (java.lang.Exception ex) {
            ex.printStackTrace();
            throw new RuntimeException(ex);
        }
    }

    /* (non-Javadoc)
     * @see ttu.idu0080.order.server.OrderService#getOrdersByCustomerLastName(java.lang.String lastName)*
     */
    public java.util.List<ttu.idu0080.order.server.Order> getOrdersByCustomerLastName(java.lang.String lastName) { 
        LOG.info("Executing operation getOrdersByCustomerLastName");
        System.out.println(lastName);
        try {
            java.util.List<ttu.idu0080.order.server.Order> _return = new java.util.ArrayList<ttu.idu0080.order.server.Order>();
            ttu.idu0080.order.server.Order _returnVal1 = new ttu.idu0080.order.server.Order();
            ttu.idu0080.order.server.Customer _returnVal1Customer = new ttu.idu0080.order.server.Customer();
            java.util.List<ttu.idu0080.order.server.Address> _returnVal1CustomerAddresses = new java.util.ArrayList<ttu.idu0080.order.server.Address>();
            _returnVal1Customer.getAddresses().addAll(_returnVal1CustomerAddresses);
            _returnVal1Customer.setCustomer(-1498144828);
            _returnVal1Customer.setFirstName("FirstName1869502312");
            _returnVal1Customer.setLastName("LastName-1787520616");
            _returnVal1.setCustomer(_returnVal1Customer);
            _returnVal1.setOrderId(2082525410);
            java.util.List<ttu.idu0080.order.server.OrderProduct> _returnVal1OrderProducts = new java.util.ArrayList<ttu.idu0080.order.server.OrderProduct>();
            ttu.idu0080.order.server.OrderProduct _returnVal1OrderProductsVal1 = new ttu.idu0080.order.server.OrderProduct();
            _returnVal1OrderProductsVal1.setOrderProduct(25050074);
            _returnVal1OrderProductsVal1.setPrice(0.5752034f);
            _returnVal1OrderProductsVal1.setPriceTotal(0.3618002f);
            _returnVal1OrderProductsVal1.setProductCount(992046274);
            _returnVal1OrderProductsVal1.setProductName("ProductName1611185022");
            _returnVal1OrderProducts.add(_returnVal1OrderProductsVal1);
            _returnVal1.getOrderProducts().addAll(_returnVal1OrderProducts);
            _returnVal1.setPriceTotal(0.6355687f);
            ttu.idu0080.order.server.Seller _returnVal1Seller = new ttu.idu0080.order.server.Seller();
            java.util.List<ttu.idu0080.order.server.EntAddress> _returnVal1SellerAddresses = new java.util.ArrayList<ttu.idu0080.order.server.EntAddress>();
            _returnVal1Seller.getAddresses().addAll(_returnVal1SellerAddresses);
            _returnVal1Seller.setEnterprise(938197384);
            _returnVal1Seller.setName("Name517302570");
            _returnVal1.setSeller(_returnVal1Seller);
            ttu.idu0080.order.server.Address _returnVal1ShippingAddress = new ttu.idu0080.order.server.Address();
            _returnVal1ShippingAddress.setAddress(1337818513);
            _returnVal1ShippingAddress.setCountry("Country381656008");
            _returnVal1ShippingAddress.setCounty("County-1027226651");
            _returnVal1ShippingAddress.setStreetAddress("StreetAddress-1782809744");
            _returnVal1ShippingAddress.setTownVillage("TownVillage-273836219");
            _returnVal1ShippingAddress.setZipcode("Zipcode-1865438676");
            _returnVal1.setShippingAddress(_returnVal1ShippingAddress);
            _return.add(_returnVal1);
            return _return;
        } catch (java.lang.Exception ex) {
            ex.printStackTrace();
            throw new RuntimeException(ex);
        }
    }

}
